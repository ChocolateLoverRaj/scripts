name: Build Coreboot for a Chromebook, with custom logo
run-name: Build ${{ github.event.issue.title }} for ${{ github.actor }}
on:
  issues:
    types: 
      - opened
      - reopened
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: "A GitHub Actions build has started for this custom logo. Here is the link to view progress: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
      - name: Install Dependencies for Logo Replacing Script
        run: npm install
        working-directory: action
      - id: script
        name: Run Logo Replacing Script
        run: npm start
        working-directory: action
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Install Dependencies for Building Coreboot
        working-directory: coreboot
        run: sudo apt-get install -y bison build-essential curl flex git gnat imagemagick libncurses5-dev m4 nasm python-is-python3 uuid-dev zlib1g-dev
      - name: Cache Coreboot Toolchain
        uses: actions/cache@v3
        with:
          path: coreboot/util/crossgcc/tarballs,coreboot/util/crossgcc/xgxx
          key: v1
      - name: Build Coreboot Toolchain
        working-directory: coreboot
        run: make crossgcc-i386 CPUS=$(nproc)
      - name: Build Coreboot
        working-directory: coreboot
        run:  |
          cfg_file=$(find ./configs -name "config.$1.uefi")
          cp "$cfg_file" .config
          echo "CONFIG_LOCALVERSION=\"${rev}\"" >>.config
          make clean
          make olddefconfig
          make -j$(nproc)
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.script.outputs.boardName }}-full-rom-custom-logo-${{ github.event.issue.number }}.rom
          path: coreboot/build/coreboot.rom
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["success"]
            })
      - name: Close Issue
        run: gh issue close --comment "The GitHub Action is complete! Download the artifact of the run to flash the firmware" ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  report-failure:
    needs: 
      - build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["failure"]
            })
      - name: Close Issue
        run: gh issue close --comment "The GitHub Action has failed! See the logs for details" ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
